@page "/states/create/{CountryId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<div class="card">
    <div class="card-header">
       <i class="oi oi-globe"></i> Create State

    </div>
    <div class="card-body">
        <StateForm @ref="stateForm" State="state" OnValidSubmit="Create" ReturnAction="Return" />
    </div>
</div>


@code {
    private State state = new();
    private StateForm? stateForm;

    [Parameter]
    public int CountryId { get; set; }

    private async Task Create()
    {

        state.CountryId = CountryId;
        var httpResponse = await repository.Post("/api/states", state);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {
        stateForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"/countries/details/{CountryId}");
    }
}