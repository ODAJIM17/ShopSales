@layout AuthLayout
@page "/changePassword"
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

@if (loading)
{
    <div class="spinner" />
}
<div class="row">
    <div class="col-4 offset-4">
        <EditForm Model="changePasswordDTO" OnValidSubmit="ChangePasswordAsync">
            <DataAnnotationsValidator />
            <div class="container">
                <div class="card">
                    <div class="card-header">
                        <span>
                            <i class="oi oi-key" /> Cahange Password
                            <a class="btn btn-sm rounded-pill btn-success float-end" href="/editUser"><i class="oi oi-arrow-thick-left" /> Return</a>
                            <button class="btn btn-sm rounded-pill btn-primary float-end mx-2" type="submit"><i class="oi oi-check" /> Save Changes</button>
                        </span>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label>Curent Password:</label>
                            <div>
                                <InputText type="password" class="form-control smfont" @bind-Value="@changePasswordDTO.CurrentPassword" />
                                <ValidationMessage For="@(() => changePasswordDTO.CurrentPassword)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>New Password:</label>
                            <div>
                                <InputText type="password" class="form-control smfont" @bind-Value="@changePasswordDTO.NewPassword" />
                                <ValidationMessage For="@(() => changePasswordDTO.CurrentPassword)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Confirm new Password:</label>
                            <div>
                                <InputText type="password" class="form-control smfont" @bind-Value="@changePasswordDTO.Confirm" />
                                <ValidationMessage For="@(() => changePasswordDTO.Confirm)" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private ChangePasswordDTO changePasswordDTO = new();
    private bool loading;

    private async Task ChangePasswordAsync()
    {
        loading = true;
        var responseHttp = await repository.Post("/api/accounts/changePassword", changePasswordDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            loading = false;
            return;
        }

        loading = false;
        navigationManager.NavigateTo("/editUser");
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
        {
            Toast = true,
            Position = SweetAlertPosition.TopEnd,
            ShowConfirmButton = true,
            Timer = 5000
        });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Password changed successfully.");
    }
}
