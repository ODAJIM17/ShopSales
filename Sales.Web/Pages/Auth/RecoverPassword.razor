@layout AuthLayout
@page "/RecoverPassword"
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

@if (loading)
{
    <div class="spinner" />
}

<div class="container">
    <div class="row">
        <div class="col-12">
            <EditForm Model="emailDTO" OnValidSubmit="SendRecoverPasswordEmailTokenAsync">
                <DataAnnotationsValidator />
                <div class="card">
                    <div class="card-header">
                        <span>
                            <i class="oi oi-key" /> Forgot Password
                            <button class="btn btn-sm btn-primary float-end mx-2" type="submit"><i class="oi oi-loop-square" /> Submit</button>
                        </span>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label>Enter your sccount email address:</label>
                            <div>
                                <InputText class="form-control" @bind-Value="@emailDTO.Email" />
                                <ValidationMessage For="@(() => emailDTO.Email)" />
                            </div>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>



@code {
    private EmailDTO emailDTO = new();
    private bool loading;

    private async Task SendRecoverPasswordEmailTokenAsync()
    {
        loading = true;
        var responseHttp = await repository.Post("/api/accounts/RecoverPassword", emailDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            loading = false;
            return;
        }

        loading = false;
        await sweetAlertService.FireAsync("Confirmación", "Please check your email and follw the instructions to recover your password.", SweetAlertIcon.Info);
        navigationManager.NavigateTo("/");
    }
}
