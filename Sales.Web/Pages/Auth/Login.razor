@layout AuthLayout
@page "/Login"
@inject AuthenticationStateProvider AuthenticationStateProvider 
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager
@inject ILoginService loginService


<EditForm Model="loginDTO" OnValidSubmit="LoginAsync">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="col-md-6 offset-md-3 mt-4">
            <div class="card bg-light mb-3" style="max-width: 40rem;">
                <div class="card-header">
                    <span>
                        <i class="oi oi-envelope-open"></i> Sign in with your E-Mail Account
                        <a class="btn btn-sm btn-primary float-end" href="/Register"><i class="oi oi-book"></i> Register</a>
                    </span>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="mb-3">
                                <label>Email:</label>
                                <div>
                                    <InputText class="form-control smfont" @bind-Value="@loginDTO.Email" placeholder="Email address..." />
                                    <ValidationMessage For="@(() => loginDTO.Email)" />
                                </div>
                            </div>
                            <div class="mb-3">
                                <label>Password:</label>
                                <div>
                                    <InputText type="password" class="form-control smfont" @bind-Value="@loginDTO.Password" placeholder="Password..." />
                                    <ValidationMessage For="@(() => loginDTO.Password)" />
                                </div>
                            </div>
                            <button class="btn btn-sm btn-primary" type="submit"><i class="oi oi-account-login"></i> Login</button>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">

                        <div class="col-md-6">
                            <div class="d-grid">
                                <a class="btn btn-sm btn-primary" href="/RecoverPassword"><i class="oi oi-lock-locked"></i> Forgot password?</a>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-grid">
                                <a class="btn btn-sm btn-success" href="/ResendToken"><i class="oi oi-action-redo"></i> Forgot to activate account?</a>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
         
        </div>
    </div>



</EditForm>

@code {
    private LoginDTO loginDTO = new();

    private async Task LoginAsync()
    {
        var responseHttp = await repository.Post<LoginDTO, TokenDTO>("/api/accounts/Login", loginDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await loginService.LoginAsync(responseHttp.Response!.Token);
        navigationManager.NavigateTo("/");
    }
}
