@layout AuthLayout
@page "/api/accounts/ConfirmEmail"
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager


<div class="container">
    <div class="card">
        <div class="card-header">
            <h5> <i class="oi oi-person" /> Confirm Email</h5>
        </div>
        <div class="card-body">
            <p>Please click this botton in order to confirm your email. Thanks...</p>
            <button class="btn btn-sm rounded-pill btn-primary" @onclick="ConfirmAccountAsync">Confirm Account</button>
        </div>
    </div>
</div>

@code {
    private string? message;

    [Parameter]
    [SupplyParameterFromQuery]
    public string UserId { get; set; } = "";

    [Parameter]
    [SupplyParameterFromQuery]
    public string Token { get; set; } = "";

    protected async Task ConfirmAccountAsync()
    {
        var responseHttp = await repository.Get($"/api/accounts/ConfirmEmail/?userId={UserId}&token={Token}");
        if (responseHttp.Error)
        {
            message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            navigationManager.NavigateTo("/");
        }
        else
        {
            await sweetAlertService.FireAsync("Confirmación", "Gracias por confirmar su email, ahora puedes ingresar al sistema.", SweetAlertIcon.Info);
            navigationManager.NavigateTo("/Login");
        }
    }
}
