@layout AuthLayout
@page "/Register"

@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager
@inject ILoginService loginService



<EditForm Model="userDTO" OnValidSubmit="CreteUserAsync">
    <DataAnnotationsValidator />
    <div class="container">
        <div class=" card">
            <div class="card-header">
                <h5>Registration Form</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label>First Name:</label>
                            <div>
                                <InputText class="form-control smfont" @bind-Value="@userDTO.FirstName" />
                                <ValidationMessage For="@(() => userDTO.FirstName)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Last Name:</label>
                            <div>
                                <InputText class="form-control smfont" @bind-Value="@userDTO.LastName" />
                                <ValidationMessage For="@(() => userDTO.LastName)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Document:</label>
                            <div>
                                <InputText class="form-control smfont" @bind-Value="@userDTO.Document" />
                                <ValidationMessage For="@(() => userDTO.Document)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Phone:</label>
                            <div>
                                <InputText class="form-control smfont" @bind-Value="@userDTO.PhoneNumber" />
                                <ValidationMessage For="@(() => userDTO.PhoneNumber)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Address:</label>
                            <div>
                                <InputText class="form-control smfont" @bind-Value="@userDTO.Address" />
                                <ValidationMessage For="@(() => userDTO.Address)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Email:</label>
                            <div>
                                <InputText class="form-control smfont" @bind-Value="@userDTO.Email" />
                                <ValidationMessage For="@(() => userDTO.Email)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label>City:</label>
                            <div>
                                <InputNumber class="form-control smfont" @bind-Value="@userDTO.CityId" />
                                <ValidationMessage For="@(() => userDTO.CityId)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Photo:</label>
                            <div>
                                <InputText class="form-control smfont" @bind-Value="@userDTO.Photo" />
                                <ValidationMessage For="@(() => userDTO.Photo)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Password:</label>
                            <div>
                                <InputText type="password" class="form-control smfont" @bind-Value="@userDTO.Password" />
                                <ValidationMessage For="@(() => userDTO.Password)" />
                            </div>
                        </div>
                        <div class="mb-3">
                            <label>Confirm Password:</label>
                            <div>
                                <InputText type="password" class="form-control smfont" @bind-Value="@userDTO.PasswordConfirm" />
                                <ValidationMessage For="@(() => userDTO.PasswordConfirm)" />
                            </div>
                        </div>
                    </div>
                </div>
                <button class="btn btn-sm btn-primary" type="submit">Register</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private UserDTO userDTO = new();

    private async Task CreteUserAsync()
    {
        userDTO.UserName = userDTO.Email;
        userDTO.UserType = UserType.User;
        var responseHttp = await repository.Post<UserDTO, TokenDTO>("/api/accounts/CreateUser", userDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await loginService.LoginAsync(responseHttp.Response!.Token);
        navigationManager.NavigateTo("/");
    }
}
